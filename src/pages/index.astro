---
import '../../src/styles/global.css';

const { searchParams } = Astro.url;

const video_id = searchParams.get('video_id');

let details = {} as any;

try {
  if (video_id) {
    const response = await fetch(`https://tavusapi.com/v2/videos/${video_id}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': import.meta.env.TAVUS_API_KEY,
      },
    });

    details = await response.json();
  }
} catch (error) {
  console.error(error);
}
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <title>Tavus API sample Astro project</title>
  </head>
  <body class='prose max-w-none'>
    <script define:vars={{ details }}>
      const { video_id, status } = details;

      if (video_id && status !== 'ready') {
        setInterval(() => {
          window.location.reload();
        }, 5000);
      }
    </script>
    <script>
      const form = document.getElementById('myForm');
      const button = document.getElementById('myButton');

      const handleSubmit = async (event: SubmitEvent) => {
        event.preventDefault();
        button.setAttribute('disabled', 'true');
        const formData = new FormData(event.target as HTMLFormElement);

        try {
          const response = await fetch('/api/create-video', {
            method: 'POST',
            body: formData,
          });

          const data = await response.json();

          if (!response.ok) {
            throw new Error();
          }
          window.location.search = `video_id=${data.message.video_id}`;
        } catch (error) {
          console.log(error);
        }
      };

      form?.addEventListener('submit', handleSubmit);
    </script>

    <h1>Tavus Test App</h1>
    <p>Create an AI avatar using the Replica API</p>

    <section>
      <div>
        <h2>Request</h2>
        <form id='myForm' method='POST'>
          <label>
            Model
            <select name='replica_id' id='replica_id'>
              <option value='r8bfa69a42'>Laura</option>
              <option value='re1074c227'>Reyna</option>
              <option value='rf01eccaf1'>Andre</option>
              <option value='re6d38b625'>David</option>
            </select>
          </label>
          <label>
            Video name
            <input
              type='text'
              name='video_name'
              id='video_name'
              placeholder={`${details.video_name || 'Test video'}`}
            />
          </label>
          <label>
            Script
            <textarea name='script' id='script' placeholder={`${details.data?.script || 'This is a test script'}`}
            ></textarea>
          </label>
          <label>
            Background url
            <input type='text' name='background_url' id='background_url' />
          </label>
          <button id='myButton' disabled={details.status === 'queued' || details.status === 'generating'}>create</button
          >
        </form>
      </div>

      <div>
        <h2 class={details.status === 'queued' || details.status === 'generating' ? 'animate-bounce' : ''}>Response</h2>
        <pre>{JSON.stringify(details, null, 2)}</pre>
      </div>
    </section>
  </body>
</html>
